version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: fintech_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "9543:5432"
    # Optimized for 16GB RAM system (using ~3GB for PostgreSQL)
    command: >
      postgres 
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=100
      -c shared_buffers=768MB
      -c effective_cache_size=3GB
      -c work_mem=8MB
      -c maintenance_work_mem=256MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=32MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  app:
    build: .
    container_name: fintech_app
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      HF_API_KEY: ${HF_API_KEY}
      FRED_API_KEY: ${FRED_API_KEY}
      PYTHONPATH: /app
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./config:/app/config
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app
    command: tail -f /dev/null  # Keep container running for development
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  streamlit:
    build: .
    container_name: fintech_dashboard
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      PYTHONPATH: /app
    ports:
      - "8501:8501"
    volumes:
      - ./src:/app/src
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    working_dir: /app
    command: streamlit run src/dashboard/main.py --server.address 0.0.0.0 --server.port 8501
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

volumes:
  postgres_data:
    driver: local